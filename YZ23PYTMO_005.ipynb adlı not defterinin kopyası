{"cells":[{"cell_type":"markdown","metadata":{"id":"s7assEfrbB8a"},"source":["#Uygulama 3: K En Yakın Komşu Algoritması Uygulaması (k-NN) "]},{"cell_type":"markdown","metadata":{"id":"Med5BUxRz5Do"},"source":["**Veri seti hakkında bilgi**<br>\n","\"Breast Cancer Wisconsin (Diagnostic)\" veri seti, birçok makine öğrenme algoritmasının test edilmesi için kullanılan yaygın bir veri setidir. Bu veri seti, Wisconsin Üniversitesi Tıbbi Okulu Patoloji Bölümü tarafından 1989-1990 yılları arasında toplanmıştir. Veri seti, 569 adet göğüs kanseri tümörünün 30 özelliğine ilişkin verileri içerir. Bu özellikler, tümörlerin fiziksel ölçümleri ve tekstürlerine ilişkin ölçümlerdir. Veri setinin hedef değişkeni \"diagnosis\" adlı değişkendir ve tümörlerin malign (zararlı) ya da benign (zararsız) olduğunu gösterir. Bu veri seti, makine öğrenme algoritmalarının nasıl uygulandığını anlamaya yardımcı olarak kullanılabilir.\n","\n","\n","\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZktEwJX_LL_H","executionInfo":{"status":"ok","timestamp":1681220406554,"user_tz":-180,"elapsed":3065,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"e34e2e14-e03c-4ba6-afeb-a37ed448fa75"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","metadata":{"id":"JAp3clSxbN68"},"source":["**Ön Hazırlık** \n","*   Uyarıları kapatma"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AD1Ih0azu5e9"},"outputs":[],"source":["import warnings \n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","metadata":{"id":"4jGKUQZtbj1b"},"source":["**1. Aşama: Veri Toplama**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xY88QCZ81XzT","executionInfo":{"status":"ok","timestamp":1681220407921,"user_tz":-180,"elapsed":1373,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"colab":{"base_uri":"https://localhost:8080/","height":317},"outputId":"a412d97d-bf3e-4b93-f867-7d4ce16600a8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0    842302         M        17.99         10.38          122.80     1001.0   \n","1    842517         M        20.57         17.77          132.90     1326.0   \n","2  84300903         M        19.69         21.25          130.00     1203.0   \n","3  84348301         M        11.42         20.38           77.58      386.1   \n","4  84358402         M        20.29         14.34          135.10     1297.0   \n","\n","   smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0          0.11840           0.27760          0.3001              0.14710   \n","1          0.08474           0.07864          0.0869              0.07017   \n","2          0.10960           0.15990          0.1974              0.12790   \n","3          0.14250           0.28390          0.2414              0.10520   \n","4          0.10030           0.13280          0.1980              0.10430   \n","\n","   ...  texture_worst  perimeter_worst  area_worst  smoothness_worst  \\\n","0  ...          17.33           184.60      2019.0            0.1622   \n","1  ...          23.41           158.80      1956.0            0.1238   \n","2  ...          25.53           152.50      1709.0            0.1444   \n","3  ...          26.50            98.87       567.7            0.2098   \n","4  ...          16.67           152.20      1575.0            0.1374   \n","\n","   compactness_worst  concavity_worst  concave points_worst  symmetry_worst  \\\n","0             0.6656           0.7119                0.2654          0.4601   \n","1             0.1866           0.2416                0.1860          0.2750   \n","2             0.4245           0.4504                0.2430          0.3613   \n","3             0.8663           0.6869                0.2575          0.6638   \n","4             0.2050           0.4000                0.1625          0.2364   \n","\n","   fractal_dimension_worst  Unnamed: 32  \n","0                  0.11890          NaN  \n","1                  0.08902          NaN  \n","2                  0.08758          NaN  \n","3                  0.17300          NaN  \n","4                  0.07678          NaN  \n","\n","[5 rows x 33 columns]"],"text/html":["\n","  <div id=\"df-11530f3c-4ea6-4548-aa26-60a4b500e23b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>...</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","      <th>Unnamed: 32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842302</td>\n","      <td>M</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>...</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>842517</td>\n","      <td>M</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>...</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>84300903</td>\n","      <td>M</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>...</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>84348301</td>\n","      <td>M</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>...</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>84358402</td>\n","      <td>M</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>...</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 33 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11530f3c-4ea6-4548-aa26-60a4b500e23b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-11530f3c-4ea6-4548-aa26-60a4b500e23b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-11530f3c-4ea6-4548-aa26-60a4b500e23b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["import pandas as pd\n","df = pd.read_csv(\n","    \"/content/drive/MyDrive/PythonileMakineOgrenmesi/VeriSetleri/breast_cancer_data.csv\")\n","df.head()"]},{"cell_type":"markdown","metadata":{"id":"qHf7fN5zbpzX"},"source":["**2. Aşama: Veri Ön İşleme**\n","\n","*   Girdi özellikleri ve hedef değişkeni (etiket) ayır"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xQghuqZH3wMW"},"outputs":[],"source":["X = df[[\"radius_mean\", \"texture_mean\", \"perimeter_mean\", \"area_mean\", \n","        \"smoothness_mean\", \"compactness_mean\", \"concavity_mean\", \"concave points_mean\", \n","        \"symmetry_mean\", \"fractal_dimension_mean\", \"radius_se\", \"texture_se\", \"perimeter_se\", \n","        \"area_se\", \"smoothness_se\", \"compactness_se\", \"concavity_se\", \"concave points_se\", \n","        \"symmetry_se\", \"fractal_dimension_se\", \"radius_worst\", \"texture_worst\", \n","        \"perimeter_worst\", \"area_worst\", \"smoothness_worst\", \"compactness_worst\", \n","        \"concavity_worst\", \"concave points_worst\", \"symmetry_worst\", \"fractal_dimension_worst\"]]\n","\n","y = df[\"diagnosis\"]"]},{"cell_type":"markdown","metadata":{"id":"XUQ6YfogcGi1"},"source":["*   Veri setine dair istatistiki bilgilerin görüntülenmesi."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1681220407921,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"},"user_tz":-180},"id":"vYLhfuox-ki-","outputId":"ba3f2cc3-cd4b-4a38-ce17-1d28398079ee"},"outputs":[{"output_type":"stream","name":"stdout","text":["                 id  radius_mean  texture_mean  perimeter_mean    area_mean  \\\n","count  5.690000e+02   569.000000    569.000000      569.000000   569.000000   \n","mean   3.037183e+07    14.127292     19.289649       91.969033   654.889104   \n","std    1.250206e+08     3.524049      4.301036       24.298981   351.914129   \n","min    8.670000e+03     6.981000      9.710000       43.790000   143.500000   \n","25%    8.692180e+05    11.700000     16.170000       75.170000   420.300000   \n","50%    9.060240e+05    13.370000     18.840000       86.240000   551.100000   \n","75%    8.813129e+06    15.780000     21.800000      104.100000   782.700000   \n","max    9.113205e+08    28.110000     39.280000      188.500000  2501.000000   \n","\n","       smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","count       569.000000        569.000000      569.000000           569.000000   \n","mean          0.096360          0.104341        0.088799             0.048919   \n","std           0.014064          0.052813        0.079720             0.038803   \n","min           0.052630          0.019380        0.000000             0.000000   \n","25%           0.086370          0.064920        0.029560             0.020310   \n","50%           0.095870          0.092630        0.061540             0.033500   \n","75%           0.105300          0.130400        0.130700             0.074000   \n","max           0.163400          0.345400        0.426800             0.201200   \n","\n","       symmetry_mean  ...  texture_worst  perimeter_worst   area_worst  \\\n","count     569.000000  ...     569.000000       569.000000   569.000000   \n","mean        0.181162  ...      25.677223       107.261213   880.583128   \n","std         0.027414  ...       6.146258        33.602542   569.356993   \n","min         0.106000  ...      12.020000        50.410000   185.200000   \n","25%         0.161900  ...      21.080000        84.110000   515.300000   \n","50%         0.179200  ...      25.410000        97.660000   686.500000   \n","75%         0.195700  ...      29.720000       125.400000  1084.000000   \n","max         0.304000  ...      49.540000       251.200000  4254.000000   \n","\n","       smoothness_worst  compactness_worst  concavity_worst  \\\n","count        569.000000         569.000000       569.000000   \n","mean           0.132369           0.254265         0.272188   \n","std            0.022832           0.157336         0.208624   \n","min            0.071170           0.027290         0.000000   \n","25%            0.116600           0.147200         0.114500   \n","50%            0.131300           0.211900         0.226700   \n","75%            0.146000           0.339100         0.382900   \n","max            0.222600           1.058000         1.252000   \n","\n","       concave points_worst  symmetry_worst  fractal_dimension_worst  \\\n","count            569.000000      569.000000               569.000000   \n","mean               0.114606        0.290076                 0.083946   \n","std                0.065732        0.061867                 0.018061   \n","min                0.000000        0.156500                 0.055040   \n","25%                0.064930        0.250400                 0.071460   \n","50%                0.099930        0.282200                 0.080040   \n","75%                0.161400        0.317900                 0.092080   \n","max                0.291000        0.663800                 0.207500   \n","\n","       Unnamed: 32  \n","count          0.0  \n","mean           NaN  \n","std            NaN  \n","min            NaN  \n","25%            NaN  \n","50%            NaN  \n","75%            NaN  \n","max            NaN  \n","\n","[8 rows x 32 columns]\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 569 entries, 0 to 568\n","Data columns (total 33 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   id                       569 non-null    int64  \n"," 1   diagnosis                569 non-null    object \n"," 2   radius_mean              569 non-null    float64\n"," 3   texture_mean             569 non-null    float64\n"," 4   perimeter_mean           569 non-null    float64\n"," 5   area_mean                569 non-null    float64\n"," 6   smoothness_mean          569 non-null    float64\n"," 7   compactness_mean         569 non-null    float64\n"," 8   concavity_mean           569 non-null    float64\n"," 9   concave points_mean      569 non-null    float64\n"," 10  symmetry_mean            569 non-null    float64\n"," 11  fractal_dimension_mean   569 non-null    float64\n"," 12  radius_se                569 non-null    float64\n"," 13  texture_se               569 non-null    float64\n"," 14  perimeter_se             569 non-null    float64\n"," 15  area_se                  569 non-null    float64\n"," 16  smoothness_se            569 non-null    float64\n"," 17  compactness_se           569 non-null    float64\n"," 18  concavity_se             569 non-null    float64\n"," 19  concave points_se        569 non-null    float64\n"," 20  symmetry_se              569 non-null    float64\n"," 21  fractal_dimension_se     569 non-null    float64\n"," 22  radius_worst             569 non-null    float64\n"," 23  texture_worst            569 non-null    float64\n"," 24  perimeter_worst          569 non-null    float64\n"," 25  area_worst               569 non-null    float64\n"," 26  smoothness_worst         569 non-null    float64\n"," 27  compactness_worst        569 non-null    float64\n"," 28  concavity_worst          569 non-null    float64\n"," 29  concave points_worst     569 non-null    float64\n"," 30  symmetry_worst           569 non-null    float64\n"," 31  fractal_dimension_worst  569 non-null    float64\n"," 32  Unnamed: 32              0 non-null      float64\n","dtypes: float64(31), int64(1), object(1)\n","memory usage: 146.8+ KB\n","None\n"]}],"source":["print(df.describe())\n","print(df.info())"]},{"cell_type":"markdown","source":["* Eğitim ve test verisini ayır.\n","\n","\n","\n","\n"],"metadata":{"id":"Yv4Bjq_4OPWF"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"5hFq5s2eOPqQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3Bow4BD4c7rc"},"source":["**3. Aşama: Model Oluşturma**\n","\n","*   k-NN modelini tanımlama ve eğitme"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1681220409950,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"},"user_tz":-180},"id":"u9506-Cw4ttm","outputId":"5723c561-33f1-4e0e-fc40-eff0d1bbe18e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":11}],"source":["#Model seçme\n","from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=5)\n","#Modeli eğitme\n","knn.fit(X_train, y_train)"]},{"cell_type":"markdown","metadata":{"id":"Pb88hNFsdQU1"},"source":["**4.Aşama : Modeli Test Etme**\n","\n","*   Test verileri ile modeli değerlendirme."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mnyzBqMLuDwv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681220409950,"user_tz":-180,"elapsed":6,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"2b4afe11-4fad-41bc-8361-f4e5f7047ba4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Eğitim verisi için doğruluk : 0.9406593406593406\n","Test verisi için doğruluk   : 0.956140350877193\n"]}],"source":["from sklearn.metrics import accuracy_score\n","print(\"Eğitim verisi için doğruluk :\", knn.score(X_train, y_train))\n","print(\"Test verisi için doğruluk   :\", knn.score(X_test, y_test))"]},{"cell_type":"markdown","metadata":{"id":"GQOD19k5djIl"},"source":["*   Confusion Matrisi(Hata Matrisi) Tablo ve Grafik\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":571},"id":"lYeChCnMvAjb","executionInfo":{"status":"ok","timestamp":1681220409950,"user_tz":-180,"elapsed":5,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"1330bb49-6b05-4523-9ab8-9f759f2e5f81"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAoUAAAIqCAYAAABSYzDvAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABMhUlEQVR4nO3deVyVZf7/8fcB4YgLoCDgxlJqWLkviJp72qJpWWlThtpvnEodkynLZnIpG9JKzWyzMdAmp0VzrXSSUCvFBaPlm1qZRi6AG6CoB4T790dfz7cTtwpHDufIeT173I+J67ru+/6c49JnPtd1X7fFMAxDAAAA8Go+7g4AAAAA7kdSCAAAAJJCAAAAkBQCAABAJIUAAAAQSSEAAABEUggAAACRFAIAAEAkhQAAABBJIeAyn376qUaNGqUWLVooMDBQVqtVDRs21I033qg5c+boyJEj7g5R33//vYYMGaKwsDD5+vrKYrFo2rRpVRqDxWKRxWKp0ntWVHR0tD3OCRMmXHTs888/bx9bo0aNKoqwfPbv3y+LxaLo6OjLus6GDRtksVjUq1evSokLgGcgKQQq2dGjR3XjjTeqf//+SklJUXFxsXr37q2hQ4eqZcuW2rx5sxITE3XVVVdp69atbouzsLBQt956q1auXKmoqCj96U9/UkJCgtq2beu2mK4E77zzjoqKii7Y/9Zbb1X6PSsrmQOAi/Gs/xsLXOHy8/PVvXt37dmzR7GxsVqwYIFuuOEGhzE2m02LFi3S1KlTdfjwYTdFKm3fvl379+9X165d9eWXX7otjl27drnt3hXVsWNH7dixQytXrtRdd91Vpn/z5s3avXu3OnXqpO3bt7shwotr3Lixdu3aJT8/v8u6TufOnbVr1y7VqlWrkiID4AmoFAKVaPz48dqzZ4+io6P15ZdflkkIJclqtWrMmDHKzMxUy5Yt3RDlb7KysiRJzZs3d1sMkhQbG6vY2Fi3xlBeo0ePlnThauDChQsdxnkaPz8/xcbG6uqrr76s69SqVUuxsbGKjIyspMgAeAKSQqCS/Pzzz1qyZIkkafbs2apfv/5Fx4eHh+uaa64p0/7uu++qb9++ql+/vqxWq6KiojR69Gj98MMPptc5v95t//79SktLU//+/VWvXj0FBASoffv2Wrx4scP48+vBEhISJEmLFi2yr4H7/dq+S63169WrlywWizZs2ODQnp+fr3/84x9q1aqVateuLavVqkaNGqlbt26aMmWKiouLHcZf7D7Hjx/Xk08+qeuuu061atVS3bp11aFDB82aNUtnzpwpM/73a92Ki4s1c+ZMXXfddQoICFBISIjuuOOOy6pMtmrVSh07dtR///tfHTx40KHv1KlTev/999WkSRP179//gtf4/vvvNXXqVHXr1k2NGzeWv7+/QkJC1K9fP73//vtlxo8cOVIxMTGSpF9++cXh1+r339u0adPsa0KzsrL0wAMPqGnTpvLz89PIkSMlXXwa+scff9To0aMVExMjq9WqOnXqKCoqSrfeequSk5MdxrKmEKiemD4GKsmaNWtUUlKi4OBg3XbbbRU+3zAMjRw5UosXL1aNGjXUo0cPhYWFaefOnUpOTtZ7772nZcuW6aabbjI9/6233tKMGTPUvn173XTTTdq/f7/S09OVkJCg48eP65FHHpEkRUREKCEhQT/99JO+/PJLXX311erevfvlfHS706dPq3v37vruu+/UoEED9e3bV7Vr11Z2drZ2795tX08ZHBx8yWv9/PPP6tOnj3755Rc1aNBAt9xyi4qLi5WWlqbHH39c7733ntavX6969eqVObe4uFi33HKLNm/erB49eqhly5batm2bli9frrS0NH311VdOr88bPXq0duzYoZSUFP3973+3t7///vs6deqUJkyYIB+fC///7dmzZ2vhwoWKjY1Vq1atFBwcrKysLKWlpSk1NVXp6emaPXu2fXz37t116tQpLVu2TLVr19add9550fh+/PFHtWvXTv7+/urWrZsMw1BoaOhFz/nuu+/UrVs3FRQU6JprrtHAgQPl6+urAwcOaNOmTTp48KBGjRpVzm8IwBXLAFApRowYYUgy+vTp49T5r732miHJCA0NNb766it7e2lpqTF16lRDkhEcHGzk5uY6nBcVFWVIMvz8/IzVq1c79CUnJxuSjKCgIOP06dOmfQkJCabxSDIu9ldEz549DUlGWlqavW3RokWGJOPmm282ioqKHMaXlJQYGzZsMGw2W7nuExcXZ0gybrvtNuPUqVP29tzcXKN9+/aGJONPf/qTwzlpaWn267Vr1844fPiwve/MmTPGgAEDDEnGmDFjLvi5zJz/jj///HMjLy/PCAgIMJo1a+Ywplu3bobFYjH27t1r7Nu3z5Bk+Pr6lrnWhg0b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\n"},"metadata":{}}],"source":["from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","# Confusion matrisini hesaplama\n","y_pred = knn.predict(X_test)\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Confusion matrisini görselleştirme \n","fig, ax = plt.subplots(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, cmap='Blues', ax=ax, fmt='d', annot_kws={\"size\": 12})\n","ax.set_xlabel('Tahmin Edilen Sınıf', fontsize=14)\n","ax.set_ylabel('Gerçek Sınıf', fontsize=14)\n","ax.set_title('Confusion Matrisi', fontsize=16)\n","plt.show()"]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bU2WBfxfT0eg","executionInfo":{"status":"ok","timestamp":1681220409950,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"d70ecec8-3de8-4044-d2e7-b14aab4d9710"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           B       0.93      1.00      0.97        71\n","           M       1.00      0.88      0.94        43\n","\n","    accuracy                           0.96       114\n","   macro avg       0.97      0.94      0.95       114\n","weighted avg       0.96      0.96      0.96       114\n","\n"]}]},{"cell_type":"code","source":["\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# y_test ve y_pred dizilerinin kopyalarını oluşturalım\n","y_test_copy = y_test.copy()\n","y_pred_copy = y_pred.copy()\n","\n","# y_test ve y_pred dizilerindeki etiketleri yeniden kodlayalım\n","y_test_copy[y_test_copy == 'M'] = 1\n","y_test_copy[y_test_copy == 'B'] = 0\n","y_pred_copy[y_pred_copy == 'M'] = 1\n","y_pred_copy[y_pred_copy == 'B'] = 0\n","\n","# y_test ve y_pred dizilerini sayısal verilere dönüştürelim\n","y_test_copy = y_test_copy.astype(np.float32)\n","y_pred_copy = y_pred_copy.astype(np.float32)\n","\n","# ROC eğrisi için fpr, tpr ve eşik değerlerini hesaplayalım\n","fpr, tpr, thresholds = roc_curve(y_test_copy, y_pred_copy)\n","\n","# AUC (Area Under the Curve) değerini hesaplayalım\n","roc_auc = roc_auc_score(y_test_copy, y_pred_copy)\n","\n","# ROC eğrisini çizelim\n","plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n","plt.legend(loc = 'lower right')\n","plt.plot([0, 1], [0, 1],'r--')\n","plt.xlim([0, 1])\n","plt.ylim([0, 1])\n","plt.ylabel('Doğru Pozitif Oranı')\n","plt.xlabel('Yanlış Pozitif Oranı')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"YurwH1Q-UFVd","executionInfo":{"status":"ok","timestamp":1681220410477,"user_tz":-180,"elapsed":530,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"b7fddb5c-aee6-402d-8a77-bdb415654aa1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"f91jVuWPdvzP"},"source":["**5.Aşama : Modeli Yayma**\n","\n","*   Modeli yayma, kullanma"]}],"metadata":{"colab":{"provenance":[{"file_id":"1T7tu9s3cOXSQ4Eo1wd4nLPHWn4wIagSN","timestamp":1681570153016},{"file_id":"1qAMi1jOwQ09MohTOK7rZGw-mLj_lFNOD","timestamp":1677661425561}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
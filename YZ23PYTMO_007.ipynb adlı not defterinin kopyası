{"cells":[{"cell_type":"markdown","metadata":{"id":"s7assEfrbB8a"},"source":["#Uygulama 5: Rastgele Orman Algoritması (Random Forest) Uygulaması"]},{"cell_type":"markdown","metadata":{"id":"Med5BUxRz5Do"},"source":["**Veri seti hakkında bilgi**<br>\n","\n","Bu veri seti ABD nüfusunun 1994 yılındaki nüfus sayımından toplanan verileri içerir. Veri seti, sayısal ve kategorik toplam 14 nitelikten oluşur. Bu nitelikler arasında yaş, çalışma sınıfı, eğitim, medeni durum, meslek, ırk, cinsiyet, haftalık çalışma saati, vb. bulunmaktadır. Veri setindeki hedef değişken, bir kişinin yıllık gelirinin 50.000 USD'nin üstünde olup olmama durumunu göstermektedir . Bu veri kümesi, sınıflandırma algoritmaları üzerinde çalışmak için yaygın şekilde kullanılmaktadır.\n"]},{"cell_type":"markdown","metadata":{"id":"JAp3clSxbN68"},"source":["**Ön Hazırlık** \n","*   Uyarıları kapatma"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AD1Ih0azu5e9"},"outputs":[],"source":["import warnings \n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","metadata":{"id":"4jGKUQZtbj1b"},"source":["**1. Aşama: Veri Toplama**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xY88QCZ81XzT","colab":{"base_uri":"https://localhost:8080/","height":250},"executionInfo":{"status":"ok","timestamp":1681296478709,"user_tz":-180,"elapsed":1057,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"b0a3dc3a-9f20-4dfb-9f58-eebae5439078"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   yas            is_turu  gozlem_sayisi      egitim  egitim_seviyesi  \\\n","0   39          State-gov          77516   Bachelors               13   \n","1   50   Self-emp-not-inc          83311   Bachelors               13   \n","2   38            Private         215646     HS-grad                9   \n","3   53            Private         234721        11th                7   \n","4   28            Private         338409   Bachelors               13   \n","\n","         evlilik_durum              meslek    iliski_durum     irk cinsiyet  \\\n","0        Never-married        Adm-clerical   Not-in-family   White     Male   \n","1   Married-civ-spouse     Exec-managerial         Husband   White     Male   \n","2             Divorced   Handlers-cleaners   Not-in-family   White     Male   \n","3   Married-civ-spouse   Handlers-cleaners         Husband   Black     Male   \n","4   Married-civ-spouse      Prof-specialty            Wife   Black   Female   \n","\n","   sermaye_kazani  sermaye_kaybi  haftalik_calisma_saati       anavatani  \\\n","0            2174              0                      40   United-States   \n","1               0              0                      13   United-States   \n","2               0              0                      40   United-States   \n","3               0              0                      40   United-States   \n","4               0              0                      40            Cuba   \n","\n","    gelir  \n","0   <=50K  \n","1   <=50K  \n","2   <=50K  \n","3   <=50K  \n","4   <=50K  "],"text/html":["\n","  <div id=\"df-9f450c41-5bac-43ab-8b45-84124efc8d74\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>yas</th>\n","      <th>is_turu</th>\n","      <th>gozlem_sayisi</th>\n","      <th>egitim</th>\n","      <th>egitim_seviyesi</th>\n","      <th>evlilik_durum</th>\n","      <th>meslek</th>\n","      <th>iliski_durum</th>\n","      <th>irk</th>\n","      <th>cinsiyet</th>\n","      <th>sermaye_kazani</th>\n","      <th>sermaye_kaybi</th>\n","      <th>haftalik_calisma_saati</th>\n","      <th>anavatani</th>\n","      <th>gelir</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>77516</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>2174</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>83311</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>215646</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>234721</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>338409</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f450c41-5bac-43ab-8b45-84124efc8d74')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9f450c41-5bac-43ab-8b45-84124efc8d74 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9f450c41-5bac-43ab-8b45-84124efc8d74');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["import pandas as pd\n","url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'\n","columns = ['yas', 'is_turu', 'gozlem_sayisi', 'egitim', 'egitim_seviyesi', \n","           'evlilik_durum', 'meslek','iliski_durum', 'irk', 'cinsiyet', \n","           'sermaye_kazani', 'sermaye_kaybi', 'haftalik_calisma_saati', \n","           'anavatani', 'gelir']\n","df = pd.read_csv(url, header=None, names=columns)\n","df.head()"]},{"cell_type":"markdown","source":["Veri setinin orijinali hakkında bilgi almak için: https://archive.ics.uci.edu/ml/datasets/Adult<br>\n","**Veri seti sütun açıklamaları:**<br>\n","*  yaş: Bireylerin yaşı (sayısal veri)\n","*  iş sınıfı: Bireylerin çalıştığı işin sınıfı (kategorik veri)\n","*  gözlem ağırlığı: Toplumda karşılaşılma ağırlığı (sayısal veri)\n","*  eğitim: Bireylerin aldığı eğitim bitirdiği okul (kategorik veri)\n","*  eğitim seviyesi: Bireylerin aldığı eğitim seviyesi (sayısal veri)\n","*  evlilik durumu: Bireylerin medeni durumu (kategorik veri)\n","*  meslek: Bireylerin çalıştığı meslek (kategorik veri)\n","* aile rolü: Bireylerin aile içi durumu (kategorik veri)\n","*  ırk: Bireylerin ırkı (kategorik veri)\n","*  cinsiyet: Bireylerin cinsiyeti (kategorik veri)\n","* sermaya kazancı: Bireylerin sermaye kazancı (sayısal veri)\n","* sermaye kaybı: Bireylerin sermaye kaybı (sayısal veri)\n","* haftalık çalışma saati: Bireylerin haftalık çalışma saati (sayısal veri)\n","* ana: Bireylerin doğum ülkesi (kategorik veri)\n","income: Bireylerin yıllık geliri 50.000 $'dan büyük veya küçük olup olmadığı (kategorik veri)"],"metadata":{"id":"5p1j2IWAi5Tx"}},{"cell_type":"markdown","metadata":{"id":"qHf7fN5zbpzX"},"source":["**2. Aşama: Veri Ön İşleme**"]},{"cell_type":"markdown","metadata":{"id":"XUQ6YfogcGi1"},"source":["*   Veri setine dair istatistiki bilgilerin görüntülenmesi."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vYLhfuox-ki-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681296478709,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"676b9223-bf82-4d05-da6d-6835236e7acb"},"outputs":[{"output_type":"stream","name":"stdout","text":["                yas  gozlem_sayisi  egitim_seviyesi  sermaye_kazani  \\\n","count  32561.000000   3.256100e+04     32561.000000    32561.000000   \n","mean      38.581647   1.897784e+05        10.080679     1077.648844   \n","std       13.640433   1.055500e+05         2.572720     7385.292085   \n","min       17.000000   1.228500e+04         1.000000        0.000000   \n","25%       28.000000   1.178270e+05         9.000000        0.000000   \n","50%       37.000000   1.783560e+05        10.000000        0.000000   \n","75%       48.000000   2.370510e+05        12.000000        0.000000   \n","max       90.000000   1.484705e+06        16.000000    99999.000000   \n","\n","       sermaye_kaybi  haftalik_calisma_saati  \n","count   32561.000000            32561.000000  \n","mean       87.303830               40.437456  \n","std       402.960219               12.347429  \n","min         0.000000                1.000000  \n","25%         0.000000               40.000000  \n","50%         0.000000               40.000000  \n","75%         0.000000               45.000000  \n","max      4356.000000               99.000000  \n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 32561 entries, 0 to 32560\n","Data columns (total 15 columns):\n"," #   Column                  Non-Null Count  Dtype \n","---  ------                  --------------  ----- \n"," 0   yas                     32561 non-null  int64 \n"," 1   is_turu                 32561 non-null  object\n"," 2   gozlem_sayisi           32561 non-null  int64 \n"," 3   egitim                  32561 non-null  object\n"," 4   egitim_seviyesi         32561 non-null  int64 \n"," 5   evlilik_durum           32561 non-null  object\n"," 6   meslek                  32561 non-null  object\n"," 7   iliski_durum            32561 non-null  object\n"," 8   irk                     32561 non-null  object\n"," 9   cinsiyet                32561 non-null  object\n"," 10  sermaye_kazani          32561 non-null  int64 \n"," 11  sermaye_kaybi           32561 non-null  int64 \n"," 12  haftalik_calisma_saati  32561 non-null  int64 \n"," 13  anavatani               32561 non-null  object\n"," 14  gelir                   32561 non-null  object\n","dtypes: int64(6), object(9)\n","memory usage: 3.7+ MB\n","None\n"]}],"source":["print(df.describe())\n","print(df.info())"]},{"cell_type":"markdown","metadata":{"id":"WbiJMpdPsfb8"},"source":["*   Eksik veri ve kullanılmayacak özleliklerin verisetinden çıkarılması"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xQghuqZH3wMW"},"outputs":[],"source":["# Veri setindeki '?' değerlerini NaN ile değiştirme ve satırları kaldırma\n","\n","import numpy as np\n","\n","df = df.replace(' ?', np.nan)\n","\n","df = df.dropna()"]},{"cell_type":"markdown","metadata":{"id":"JyHj14eHpJjY"},"source":["*   Veri görselleştirerek ile veri setini inceleme"]},{"cell_type":"code","source":["import seaborn as sns\n","sns.countplot(x='gelir',hue='cinsiyet',data=df)"],"metadata":{"id":"6NXUjvqop3mO","colab":{"base_uri":"https://localhost:8080/","height":466},"executionInfo":{"status":"ok","timestamp":1681296481078,"user_tz":-180,"elapsed":2371,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"6fe948e3-ff4b-435b-e751-ca80dd97241a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='gelir', ylabel='count'>"]},"metadata":{},"execution_count":5},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"IErszqTBzsZy"},"source":["*   Kategorik verilerin sayısal verilere çevrilmesi"]},{"cell_type":"code","source":["df['gelir']=df['gelir'].apply(lambda x: 1 if x == ' >50K' else 0)\n","dummies= pd.get_dummies(df, columns=['is_turu', 'egitim', 'evlilik_durum', 'meslek',\n","                                 'iliski_durum', 'irk', 'cinsiyet', 'anavatani'])\n","\n","\n","print(dummies)\n","print(df.head())"],"metadata":{"id":"0hWmcNujzCeY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681296481078,"user_tz":-180,"elapsed":6,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"bec6ea34-c9f4-4cd9-a9c1-3d787725b503"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       yas  gozlem_sayisi  egitim_seviyesi  sermaye_kazani  sermaye_kaybi  \\\n","0       39          77516               13            2174              0   \n","1       50          83311               13               0              0   \n","2       38         215646                9               0              0   \n","3       53         234721                7               0              0   \n","4       28         338409               13               0              0   \n","...    ...            ...              ...             ...            ...   \n","32556   27         257302               12               0              0   \n","32557   40         154374                9               0              0   \n","32558   58         151910                9               0              0   \n","32559   22         201490                9               0              0   \n","32560   52         287927                9           15024              0   \n","\n","       haftalik_calisma_saati  gelir  is_turu_ Federal-gov  \\\n","0                          40      0                     0   \n","1                          13      0                     0   \n","2                          40      0                     0   \n","3                          40      0                     0   \n","4                          40      0                     0   \n","...                       ...    ...                   ...   \n","32556                      38      0                     0   \n","32557                      40      1                     0   \n","32558                      40      0                     0   \n","32559                      20      0                     0   \n","32560                      40      1                     0   \n","\n","       is_turu_ Local-gov  is_turu_ Private  ...  anavatani_ Portugal  \\\n","0                       0                 0  ...                    0   \n","1                       0                 0  ...                    0   \n","2                       0                 1  ...                    0   \n","3                       0                 1  ...                    0   \n","4                       0                 1  ...                    0   \n","...                   ...               ...  ...                  ...   \n","32556                   0                 1  ...                    0   \n","32557                   0                 1  ...                    0   \n","32558                   0                 1  ...                    0   \n","32559                   0                 1  ...                    0   \n","32560                   0                 0  ...                    0   \n","\n","       anavatani_ Puerto-Rico  anavatani_ Scotland  anavatani_ South  \\\n","0                           0                    0                 0   \n","1                           0                    0                 0   \n","2                           0                    0                 0   \n","3                           0                    0                 0   \n","4                           0                    0                 0   \n","...                       ...                  ...               ...   \n","32556                       0                    0                 0   \n","32557                       0                    0                 0   \n","32558                       0                    0                 0   \n","32559                       0                    0                 0   \n","32560                       0                    0                 0   \n","\n","       anavatani_ Taiwan  anavatani_ Thailand  anavatani_ Trinadad&Tobago  \\\n","0                      0                    0                           0   \n","1                      0                    0                           0   \n","2                      0                    0                           0   \n","3                      0                    0                           0   \n","4                      0                    0                           0   \n","...                  ...                  ...                         ...   \n","32556                  0                    0                           0   \n","32557                  0                    0                           0   \n","32558                  0                    0                           0   \n","32559                  0                    0                           0   \n","32560                  0                    0                           0   \n","\n","       anavatani_ United-States  anavatani_ Vietnam  anavatani_ Yugoslavia  \n","0                             1                   0                      0  \n","1                             1                   0                      0  \n","2                             1                   0                      0  \n","3                             1                   0                      0  \n","4                             0                   0                      0  \n","...                         ...                 ...                    ...  \n","32556                         1                   0                      0  \n","32557                         1                   0                      0  \n","32558                         1                   0                      0  \n","32559                         1                   0                      0  \n","32560                         1                   0                      0  \n","\n","[30162 rows x 105 columns]\n","   yas            is_turu  gozlem_sayisi      egitim  egitim_seviyesi  \\\n","0   39          State-gov          77516   Bachelors               13   \n","1   50   Self-emp-not-inc          83311   Bachelors               13   \n","2   38            Private         215646     HS-grad                9   \n","3   53            Private         234721        11th                7   \n","4   28            Private         338409   Bachelors               13   \n","\n","         evlilik_durum              meslek    iliski_durum     irk cinsiyet  \\\n","0        Never-married        Adm-clerical   Not-in-family   White     Male   \n","1   Married-civ-spouse     Exec-managerial         Husband   White     Male   \n","2             Divorced   Handlers-cleaners   Not-in-family   White     Male   \n","3   Married-civ-spouse   Handlers-cleaners         Husband   Black     Male   \n","4   Married-civ-spouse      Prof-specialty            Wife   Black   Female   \n","\n","   sermaye_kazani  sermaye_kaybi  haftalik_calisma_saati       anavatani  \\\n","0            2174              0                      40   United-States   \n","1               0              0                      13   United-States   \n","2               0              0                      40   United-States   \n","3               0              0                      40   United-States   \n","4               0              0                      40            Cuba   \n","\n","   gelir  \n","0      0  \n","1      0  \n","2      0  \n","3      0  \n","4      0  \n"]}]},{"cell_type":"markdown","source":["\n","*   Girdi özellikleri ve hedef değişkeni (etiket) ayır"],"metadata":{"id":"iDWefu6Elb5s"}},{"cell_type":"code","source":["y = df['gelir']\n","df = pd.concat([df, dummies], axis=1)\n","df = df.drop(['is_turu', 'egitim', 'evlilik_durum', 'meslek',\n","              'iliski_durum', 'irk', 'cinsiyet', 'anavatani'], axis=1)\n","X = df.drop('gelir', axis=1)\n","print(\"Özellikler:\\n \", X.head())\n","print(\"***********************\")\n","print(\"Hedef     :\\n\", y.head())"],"metadata":{"id":"ZywLw2XAsUbH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681296481078,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"1429fc66-de88-4af4-f49e-abaec7ba5f9a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Özellikler:\n","     yas  gozlem_sayisi  egitim_seviyesi  sermaye_kazani  sermaye_kaybi  \\\n","0   39          77516               13            2174              0   \n","1   50          83311               13               0              0   \n","2   38         215646                9               0              0   \n","3   53         234721                7               0              0   \n","4   28         338409               13               0              0   \n","\n","   haftalik_calisma_saati  yas  gozlem_sayisi  egitim_seviyesi  \\\n","0                      40   39          77516               13   \n","1                      13   50          83311               13   \n","2                      40   38         215646                9   \n","3                      40   53         234721                7   \n","4                      40   28         338409               13   \n","\n","   sermaye_kazani  ...  anavatani_ Portugal  anavatani_ Puerto-Rico  \\\n","0            2174  ...                    0                       0   \n","1               0  ...                    0                       0   \n","2               0  ...                    0                       0   \n","3               0  ...                    0                       0   \n","4               0  ...                    0                       0   \n","\n","   anavatani_ Scotland  anavatani_ South  anavatani_ Taiwan  \\\n","0                    0                 0                  0   \n","1                    0                 0                  0   \n","2                    0                 0                  0   \n","3                    0                 0                  0   \n","4                    0                 0                  0   \n","\n","   anavatani_ Thailand  anavatani_ Trinadad&Tobago  anavatani_ United-States  \\\n","0                    0                           0                         1   \n","1                    0                           0                         1   \n","2                    0                           0                         1   \n","3                    0                           0                         1   \n","4                    0                           0                         0   \n","\n","   anavatani_ Vietnam  anavatani_ Yugoslavia  \n","0                   0                      0  \n","1                   0                      0  \n","2                   0                      0  \n","3                   0                      0  \n","4                   0                      0  \n","\n","[5 rows x 110 columns]\n","***********************\n","Hedef     :\n"," 0    0\n","1    0\n","2    0\n","3    0\n","4    0\n","Name: gelir, dtype: int64\n"]}]},{"cell_type":"markdown","source":["* Eğitim ve test verisini ayır.\n","\n","\n","\n","\n"],"metadata":{"id":"Yv4Bjq_4OPWF"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=6)"],"metadata":{"id":"5hFq5s2eOPqQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3Bow4BD4c7rc"},"source":["**3. Aşama: Model Oluşturma**\n","\n","*  Random Forest modelini tanımlama ve eğitme"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u9506-Cw4ttm","colab":{"base_uri":"https://localhost:8080/","height":116},"executionInfo":{"status":"ok","timestamp":1681296919485,"user_tz":-180,"elapsed":437459,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"5bbc5f27-cfa2-417b-e312-90710632185b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42),\n","             param_grid={'max_depth': [10, 20, 30],\n","                         'n_estimators': [100, 200, 500]},\n","             scoring='accuracy')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42),\n","             param_grid={&#x27;max_depth&#x27;: [10, 20, 30],\n","                         &#x27;n_estimators&#x27;: [100, 200, 500]},\n","             scoring=&#x27;accuracy&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42),\n","             param_grid={&#x27;max_depth&#x27;: [10, 20, 30],\n","                         &#x27;n_estimators&#x27;: [100, 200, 500]},\n","             scoring=&#x27;accuracy&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":9}],"source":["#Model seçme\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","rf = RandomForestClassifier(random_state=42)\n","params = {'n_estimators': [100, 200, 500], 'max_depth': [10, 20, 30]}\n","grid = GridSearchCV(rf, params, cv=5, scoring='accuracy')\n","#Modeli Eğitme\n","grid.fit(X, y)"]},{"cell_type":"markdown","source":[" *  En iyi paretmetreleri seçme\n"],"metadata":{"id":"-ea6AfcZuwRe"}},{"cell_type":"code","source":["print(\"En iyi parametreler: \", grid.best_params_)\n","best_rf = grid.best_estimator_"],"metadata":{"id":"wQ_TToQov5-V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681296919485,"user_tz":-180,"elapsed":5,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"8d1bfe4c-dd2f-48a9-f267-fd5b245257f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["En iyi parametreler:  {'max_depth': 20, 'n_estimators': 200}\n"]}]},{"cell_type":"markdown","metadata":{"id":"Pb88hNFsdQU1"},"source":["**4.Aşama : Modeli Test Etme**\n","\n","*   Test verileri ile modeli değerlendirme"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mnyzBqMLuDwv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681296921234,"user_tz":-180,"elapsed":1752,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"024d9d16-65c9-4765-d557-06d06cbd0855"},"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------\n","Eğitim verisi için doğruluk : 0.928384930995897\n","----------------------------------------------------------------\n","Test verisi için doğruluk   : 0.9290568539698326\n"]}],"source":["print(\"----------------------------------------------------------------\")\n","print(\"Eğitim verisi için doğruluk :\", best_rf.score(X_train, y_train))\n","print(\"----------------------------------------------------------------\")\n","print(\"Test verisi için doğruluk   :\", best_rf.score(X_test, y_test))"]},{"cell_type":"markdown","metadata":{"id":"GQOD19k5djIl"},"source":["*   Confusion Matrisi(Hata Matrisi) Tablo ve Grafik\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lYeChCnMvAjb","colab":{"base_uri":"https://localhost:8080/","height":571},"executionInfo":{"status":"ok","timestamp":1681296921880,"user_tz":-180,"elapsed":647,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"830ccea2-57a0-45cb-85e8-c3bc767eecbe"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix\n","# Confusion matrisini hesaplama\n","y_pred = best_rf.predict(X_test)\n","cm = confusion_matrix(y_test, y_pred)\n","# Confusion matrisini görselleştirme \n","fig, ax = plt.subplots(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, cmap='Blues', ax=ax, fmt='d', annot_kws={\"size\": 12})\n","ax.set_xlabel('Tahmin Edilen Sınıf', fontsize=14)\n","ax.set_ylabel('Gerçek Sınıf', fontsize=14)\n","ax.set_title('Confusion Matrisi', fontsize=16)\n","plt.show()"]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(y_test, y_pred))"],"metadata":{"id":"bU2WBfxfT0eg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681296921880,"user_tz":-180,"elapsed":5,"user":{"displayName":"Ünal ÇELİK","userId":"17996903097212614708"}},"outputId":"d1e1cdbf-2221-47fa-8064-333c95678d9e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      0.98      0.95      4526\n","           1       0.93      0.78      0.85      1507\n","\n","    accuracy                           0.93      6033\n","   macro avg       0.93      0.88      0.90      6033\n","weighted avg       0.93      0.93      0.93      6033\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"f91jVuWPdvzP"},"source":["**5.Aşama : Modeli Yayma**\n","\n","*   Modeli yayma, kullanma\n","\n","Geliştirlen model şirketler tarafından yeni işe alınacak kişilerin ücretlerini belirlemek için kullanılabilir. Ayrıca toplumsal olarak bakıldığında ise  ücretlendirme politikalarında olası adaletsizlikleri belirlemek amacıyla da kullanılabilir.   "]},{"cell_type":"markdown","source":[" *  Random Forest karar yapsını ekrana çizme \n","\n"],"metadata":{"id":"WqbWZbD9v9wm"}}],"metadata":{"colab":{"provenance":[{"file_id":"1SB9b-K_mYtyo-zVbAYjPzNhSyegvqF3g","timestamp":1681646686399},{"file_id":"1qAMi1jOwQ09MohTOK7rZGw-mLj_lFNOD","timestamp":1677661425561}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"gpuClass":"standard"},"nbformat":4,"nbformat_minor":0}
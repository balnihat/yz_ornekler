# -*- coding: utf-8 -*-
"""tensorflow örnekleri.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FUCKSagNhdFvdCPi_GbNYFvce2IXXRCn
"""

import tensorflow as tf

"""#### Model oluşturma"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Activation

"""#### modele liste olarak  katman eklemek"""

model = Sequential([
    Dense(units=2),
    Dense(units=2),
    Dense(units=2)
])

"""#### modele sırayla  katman eklemek"""

model = Sequential()
model.add(Dense(2))
model.add(Dense(2))
model.add(Dense(2))

"""#### Model oluşturalım.
seçilen problem türüne göre örnek model oluşturma

#### regresyon modeli oluşturma örneği
"""

# gerekli modüllerin çağrılması
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Activation
from tensorflow.keras.optimizers import Adam
# model oluşturma
model = Sequential()
# modele katman ekleme
model.add(Dense(19,activation='relu'))
model.add(Dense(19,activation='relu'))
model.add(Dense(19,activation='relu'))
model.add(Dense(19,activation='relu'))
model.add(Dense(1))
# modeli derleme
model.compile(optimizer='adam',loss='mse')
# oluşturulan modelin eğitilmesi
model.fit(x=X_egitim,y=y_egitim,
          validation_data=(X_test,y_test),
          batch_size=128,epochs=400)

"""#### sınıflandırma modeli oluşturma"""

# gerekli modüllerin çağrılması
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Activation,Dropout
# model oluşturma
model = Sequential()
# modele katman ekleme
model.add(Dense(units=30,activation='relu'))
model.add(Dense(units=15,activation='relu'))
model.add(Dense(units=1,activation='sigmoid'))
# modeli derleme
model.compile(loss='binary_crossentropy', optimizer='adam')
# oluşturulan modelin eğitilmesi
model.fit(x=X_egitim,
          y=y_egitim,
          epochs=600,
          validation_data=(X_test, y_test), verbose=1
          )

"""Eğitim ve test sonuçlarını değerlendirme"""

egitim_puanı = model.evaluate(X_egitim,y_egitim,verbose=0)
değerlendirme_puanı = model.evaluate(X_test,y_test,verbose=0)

"""#### model kaydetme ve çağırma"""

from tensorflow.keras.models import load_model
model.save('modelim.h5')  # modeli HDF5  dosyası olarak kaydetme
çalışacak_model = load_model('modelim.h5')# kaydedilen modeli çağırma
# -*- coding: utf-8 -*-
"""Çoklu  Doğrusal Regresyon Analizi

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G9QnHVoUSjUkQOo6FSJvCMwe6Y6lGxXF

#Uygulama 1: Çoklu  Doğrusal Regresyon Analizi

**Ön Hazırlık :  Örneğimizde veri setine Google Drive'dan erişildiği için drive bağlantısı yapılır**
"""

from google.colab import drive
drive.mount('/content/drive')

"""**1. Aşama: Veri toplama (veri setinin yüklenmesi)**"""

import warnings
warnings.filterwarnings('ignore')
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
data_file_path = "/content/drive/MyDrive/PythonileMakineOgrenmesi/VeriSetleri/Tr_ev_fiyatlari_v2.csv"
df = pd.read_csv(data_file_path)
print(df.head())

"""**2. Aşama: Veri ön işleme**"""

print(df.info())

print(df.describe())

object_columns = df.select_dtypes(include=['object']).columns
df = pd.get_dummies(df, columns=object_columns)
print(df.head(3))

df.drop(['anayol_baglanti_hayır','misafir_odası_hayır','bodrum_hayır',
         'sıcak_su_hayır','klima_hayır','mob_drm_mobilyasız'],
        axis=1, inplace=True)
print(df.head())

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
nrmlzd_df=scaler.fit_transform(df)
df_nrmlzd=pd.DataFrame(data=nrmlzd_df, columns=df.columns)
print(df_nrmlzd.head())

y = df["fiyat"]
df.drop('fiyat', axis=1, inplace=True)
X =df

print(y.head())
print(X.head())

X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2, random_state=7)

"""**3. Aşama : Model oluşturma**"""

# Modeli seçme
model = LinearRegression()
# Modeli eğitme
model.fit(X_train, y_train)

"""**4. Aşama: Model Değerlendirme-Test etme**"""

y_pred = model.predict(X_test)
r2 = r2_score(y_test, y_pred)
print(f"Modelin doğruluk oranı: {r2:.2f}")
import matplotlib.pyplot as plt
plt.scatter(y_test, y_pred)
plt.plot(y_pred, y_pred, color='red')
plt.xlabel("Gerçek Fiyatlar")
plt.ylabel("Regresyon Tahminleri")
plt.show()

"""**5. Aşama: Modeli Yayma**"""

print("Evin özelliklerini giriniz")
ozellik=[]
ozellik.append(int(input("Evin büyüklüğü bahçe dahil           : ")))
ozellik.append(int(input("Yatak odası sayısı                   : ")))
ozellik.append(int(input("Banyo sayısı                         : ")))
ozellik.append(int(input("Kat sayısı                           : ")))
ozellik.append(int(input("Otopark sayısı                       : ")))
ozellik.append(int(input("Ana yol bağlantısı var mı? [E=1/H=0] : ")))
ozellik.append(int(input("Misafir odası var mı?      [E=1/H=0] : ")))
ozellik.append(int(input("Bodrumu var mı?            [E=1/H=0] : ")))
ozellik.append(int(input("Sıcak su var mı?           [E=1/H=0] : ")))
ozellik.append(int(input("Klima var mı?              [E=1/H=0] : ")))
ozellik.append(int(input("Tam mobilyalı mı?          [E=1/H=0] : ")))
ozellik.append(int(input("Yarım mobilyalı mı?        [E=1/H=0] : ")))
print(ozellik)
tahmini_fiyat= model.predict([ozellik])
print("--------------------------------------------")
print("Tahmini ev fiyatı:",int(tahmini_fiyat),"...")
print("--------------------------------------------")